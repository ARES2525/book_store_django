pipeline {
    agent any
    environment {
        DOCKER_COMPOSE = "docker-compose -f bookstore_project/docker-compose.yml -p bookstore_project"
    }
    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    echo "ðŸš€ Building Docker image..."
                    bat "${DOCKER_COMPOSE} build"
                }
            }
        }
        stage('Run Unit Tests') {
            steps {
                script {
                    echo "ðŸ§ª Running Django unit tests..."
                    bat "${DOCKER_COMPOSE} run bookstore_website python manage.py test"
                }
            }
        }
        stage('Apply Migrations') {
            steps {
                script {
                    echo "ðŸ’¥ Applying migrations..."
                    bat "${DOCKER_COMPOSE} run bookstore_website python manage.py makemigrations"
                    bat "${DOCKER_COMPOSE} run bookstore_website python manage.py migrate"
                }
            }
        }
        stage('Collect Static Files') {
            steps {
                script {
                    echo "ðŸ“‚ Collecting static files..."
                    bat "${DOCKER_COMPOSE} run bookstore_website python manage.py collectstatic --noinput"
                }
            }
        }
        stage('Deploy App') {
            steps {
                script {
                    echo "ðŸš€ Deploying app with fresh containers..."
                    bat "${DOCKER_COMPOSE} up -d --build --force-recreate --remove-orphans"
                }
            }
        }
        stage('View Logs') {
            steps {
                script {
                    echo "ðŸ“„ Viewing logs..."
                    bat "${DOCKER_COMPOSE} logs -f"
                }
            }
        }
    }
}
